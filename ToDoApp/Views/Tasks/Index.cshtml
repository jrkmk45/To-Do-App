@model ToDoViewModel;

@{
    ViewData["Title"] = "ToDo List";
}

<div class="mt-4">
    <div>
        <form id="addTaskForm">
            <div class="form-group">
                <label>Назва завдання</label>
                <input id="newTaskName" type="text" name="title" class="form-control" />
            </div>
            <button id="add-task" class="btn btn-primary mt-2" type="submit">Додати</button>
        </form>
    </div>

    <div class="mt-3">
        Пошук по імені
        <input id="searchBar" type="text" class="form-control" required />
    </div>

    <div id="taskList" class="d-flex flex-column list-group mt-4">
        @foreach (var task in Model.Tasks)
        {
            <div class="list-group-item d-flex gap-2 justify-content-between align-items-center"
                 data-id="@task.Id">
                <div class="d-flex align-items-center gap-1 w-100">
                    <div class="w-20">
                        <input class="is-completed-chkbox form-check-input" type="checkbox" asp-for="@task.IsCompleted">
                    </div>
                    <div class="editable-title w-100">
                        <div class="title form-check-label"
                             style="@(task.IsCompleted ? "text-decoration: line-through" : "")">
                            @task.Title
                        </div>
                        <div class="d-flex flex-column w-100">
                            <form class="edit-title-form w-100">
                                <div class="d-flex gap-2 w-100">
                                    <div class="w-100">
                                        <textarea type="text"
                                                  class="form-control edit-title"
                                                  style="display: none;"
                                                  name="title"></textarea>
                                    </div>
                                    <div>
                                        <button class="btn btn-primary save-btn"
                                                style="display: none"
                                                type="submit">
                                            Зберегти
                                        </button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>

                </div>
                <div class="d-flex flex-column flex-sm-row gap-1">
                    <button class="edit-btn btn btn-primary">Редагувати</button>
                    <button class="delete-btn btn btn-danger">Видалити</button>
                </div>
            </div>
        }
    </div>
</div>


@section scripts
{
    <script>
        const SEARCH_DEBOUNCE_DELAY = 400;
        const MAX_TITLE_LENGTH = 250;

        $(document).ready(function () {
            $('#showTextareaBtn').on('click', function () {
                $('textarea').show();
            });

            function getTaskHtml(task) {
                return `<div class="list-group-item d-flex gap-2 justify-content-between align-items-center" data-id="${task.id}">
                                            <div class="d-flex align-items-center gap-1 w-100">
                                                <div class="w-20">
                                                    <input class="is-completed-chkbox form-check-input" type="checkbox"
                                                        `+ (task.isCompleted ? 'checked' : '') + `>
                                                </div>
                                                <div class="editable-title w-100">
                                                    <div class="title form-check-label"
                                                        style="` + (task.isCompleted ? 'text-decoration: line-through;' : '') + `">${task.title}</div>
                                                    <div class="d-flex flex-column">
                                                       <form class="edit-title-form w-100">
                                                            <div class="d-flex gap-1 w-100">
                                                                <div class="w-100">
                                                                    <textarea type="text"
                                                                       class="form-control edit-title"
                                                                       style="display: none"
                                                                       name="title"></textarea>
                                                                </div>
                                                                <div>
                                                                    <button class="btn btn-primary save-btn"
                                                                            style="display: none"
                                                                            type="submit">
                                                                        Зберегти
                                                                    </button>
                                                                </div>
                                                            </div>
                                                        </form>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="d-flex flex-column flex-sm-row gap-1">
                                                <button class="btn btn-primary edit-btn">Редагувати</button>
                                                <button class="btn btn-danger delete-btn">Видалити</button>
                                            </div>
                                        </div>`;
            }

            $('#taskList').on('click', '.edit-btn', function () {
                let container = $(this).parent().parent();
                let titleElement = container.find('.title');
                let textContent = titleElement.text();

                titleElement.hide();

                let textarea = container.find('.edit-title');
                textarea.val(textContent.trim()).show();

                textarea.css('height', '0')
                textarea.css('height', textarea[0].scrollHeight)
                container.find('.save-btn').show();
            });

            $('#taskList').on('click', '.is-completed-chkbox', function () {
                let isTaskCompleted = false;
                let $this = $(this);
                if ($this.is(':checked')) {
                    isTaskCompleted = true;
                }

                $.ajax({
                    type: 'PATCH',
                    url: '/tasks/' + $this.parent().parent().parent().data('id'),
                    contentType: 'application/json',
                    data: JSON.stringify({ isCompleted: isTaskCompleted }),
                    success: function () {
                        let style = isTaskCompleted ? 'line-through' : '';
                        console.log($this.parent().find('.title'));
                        $this.parent().parent().find('.title').css('text-decoration', style);
                    },
                    error: function (error) {
                        console.error(error);
                        alert("Виникла помилка зміни статусу завдання!");
                    }
                })
            });

            $('#taskList').on('click', '.delete-btn', function () {
                let $this = $(this);
                let taskId = $this.parent().parent().data('id');
                $.ajax({
                    type: 'DELETE',
                    url: '/tasks/' + taskId,
                    success: function () {
                        console.log($this.parent().parent().remove());
                        $this.parent().parent().remove();
                    },
                    error: function (error) {
                        console.error(error);
                        alert("Виникла помилка видалення завдання!");
                    }
                })
            });

            let debounceTimeout;
            $('#searchBar').on('input', function (e) {
                clearTimeout(debounceTimeout);

                debounceTimeout = setTimeout(
                    function () {
                        $.ajax({
                            type: 'GET',
                            url: '/tasks/?title=' + $('#searchBar').val(),
                            contentType: 'application/json',
                            success: function (response) {
                                $('#taskList').empty();
                                response.forEach((task) => {
                                    $('#taskList').append(getTaskHtml(task));
                                })
                            },
                            error: function (xhr, status, error) {
                                console.error(xhr.responseText);
                                alert('Виникла помилка!');
                            }
                        });
                    }, SEARCH_DEBOUNCE_DELAY
                );
            });

            var taskValidationRules = {
                title: {
                    required: true,
                    maxlength: MAX_TITLE_LENGTH
                }
            };

            var taskValidationMessages = {
                title: {
                    required: "Обов'язкове поле!",
                    maxlength: `Поле може містити до ${MAX_TITLE_LENGTH} символів!`
                }
            };

            function validationErrorPlacement(error, element) {
                error.css('color', 'red')
                error.insertAfter(element);
            };

            $('.edit-title-form').each(function () {
                setupForm($(this));
            });

            function setupForm(form) {
                form.validate({
                    rules: taskValidationRules,
                    messages: taskValidationMessages,
                    submitHandler: function (form, event) {
                        event.preventDefault();

                        let container = $(form).parents().eq(3);

                        let taskId = container.data('id');
                        let taskTitle = container.find('.edit-title').val();

                        $.ajax({
                            type: 'PATCH',
                            url: '/tasks/' + taskId,
                            contentType: 'application/json',
                            data: JSON.stringify({ title: taskTitle }),
                            success: function (response) {
                                container.find('.edit-title').hide();
                                container.find('.save-btn').hide();
                                container.find('.title').text(taskTitle).show();
                            },
                            error: function (error) {
                                console.error(error);
                                alert("Виникла помилка при редагуванні!");
                            }
                        });
                    },
                    errorPlacement: validationErrorPlacement
                });
            }


            $('#addTaskForm').validate({
                rules: taskValidationRules,
                messages: taskValidationMessages,
                submitHandler: function(form, event) {
                    if ($(form).valid()) {
                        event.preventDefault();
                        let title = $('#newTaskName').val();

                        $.ajax({
                            type: 'POST',
                            url: '/tasks/',
                            contentType: 'application/json',
                            data: JSON.stringify({ title: title }),
                            success: function (response) {
                                let newTask = $(getTaskHtml(response));
                                $('#taskList').prepend(newTask);
                                setupForm(newTask.find('.edit-title-form'));
                            },
                            error: function (xhr, status, error) {
                                console.error(xhr.responseText);
                                alert('Виникла помилка!');
                            }
                        });
                    }
                },
                errorPlacement: validationErrorPlacement
            });
        });
    </script>
}
